<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="MSBuild.Sdk.Extras">

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <AssemblyName>ILSpy.ReadyToRun.Plugin</AssemblyName>
    <LangVersion>8.0</LangVersion>

    <GenerateAssemblyInfo>False</GenerateAssemblyInfo>
    <NeutralResourcesLanguage>en-US</NeutralResourcesLanguage>
    <EnableDefaultItems>false</EnableDefaultItems>
    <UseWpf>true</UseWpf>
    <ExtrasEnableDefaultPageItems>false</ExtrasEnableDefaultPageItems>
    <ExtrasEnableDefaultResourceItems>false</ExtrasEnableDefaultResourceItems>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>..\ILSpy\bin\$(Configuration)\</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\ICSharpCode.Decompiler\ICSharpCode.Decompiler.csproj">
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\ILSpy\ILSpy.csproj">
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\SharpTreeView\ICSharpCode.TreeView.csproj">
      <Private>False</Private>
    </ProjectReference>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Xaml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="ReadyToRunDisassembler.cs" />
    <Compile Include="ReadyToRunLanguage.cs" />
    <Compile Include="ReadyToRunOptionPage.xaml.cs">
      <DependentUpon>ReadyToRunOptionPage.xaml</DependentUpon>
    </Compile>
    <Compile Include="ReadyToRunOptions.cs" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Properties\Resources.zh-Hans.resx">
      <Generator></Generator>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Page Include="ReadyToRunOptionPage.xaml" />
  </ItemGroup>

  <Import Project="../packages.props" />

  <ItemGroup>
    <PackageReference Include="Iced" Version="1.8.0" />
    <PackageReference Include="ILCompiler.Reflection.ReadyToRun" Version="1.0.13-alpha" />
    <!-- ILCompiler.Reflection.ReadyToRun has dependencies on System.Reflection.Metadata and
         System.Runtime.CompilerServices.Unsafe. Because the AddIn compiles into ILSpy's output
         directory, we're at risk of overwriting our dependencies with different versions.
         So ensure NuGet uses consistent versions (from our packages.props) for these.
         -->
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="$(SystemCompilerServicesUnsafeVersion)" />
  </ItemGroup>

  <Target Name="RemoveTransitiveProjectReferences" AfterTargets="IncludeTransitiveProjectReferences">
    <ItemGroup>
      <ProjectReference Remove="@(_TransitiveProjectReferences)" />
    </ItemGroup>
  </Target>

</Project>
