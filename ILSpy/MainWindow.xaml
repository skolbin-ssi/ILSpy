<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="ICSharpCode.ILSpy.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:ICSharpCode.ILSpy"
		xmlns:avalondock="https://github.com/Dirkster99/AvalonDock"
		xmlns:controls="clr-namespace:ICSharpCode.ILSpy.Controls"
		xmlns:docking="clr-namespace:ICSharpCode.ILSpy.Docking"
		xmlns:properties="clr-namespace:ICSharpCode.ILSpy.Properties"
		Title="ILSpy"
		MinWidth="250"
		MinHeight="200"
		UseLayoutRounding="True"
		TextOptions.TextFormattingMode="Display"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d:DesignHeight="500" d:DesignWidth="500"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
		xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:themes="clr-namespace:ICSharpCode.ILSpy.Themes"
		xmlns:toms="urn:TomsToolbox"
		xmlns:viewModels="clr-namespace:ICSharpCode.ILSpy.ViewModels"
		xmlns:composition="urn:TomsToolbox.Composition"
		xmlns:commands="clr-namespace:ICSharpCode.ILSpy.Commands"
		xmlns:analyzers="clr-namespace:ICSharpCode.ILSpy.Analyzers"
		d:DataContext="{d:DesignInstance local:MainWindowViewModel}">
	<Window.Resources>

		<DataTemplate DataType="{x:Type viewModels:TabPageModel}">
			<ContentPresenter Content="{Binding Content}" />
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModels:LegacyToolPaneModel}">
			<ContentPresenter Content="{Binding Content}" />
		</DataTemplate>

	</Window.Resources>

	<b:Interaction.Behaviors>
		<themes:WindowStyleManagerBehavior />
	</b:Interaction.Behaviors>

	<Window.InputBindings>
		<KeyBinding Key="R" Modifiers="Control" Command="{composition:Import analyzers:AnalyzeCommand}" />
		<KeyBinding Key="Z" Modifiers="Control" Command="{x:Static NavigationCommands.BrowseBack}" />
	</Window.InputBindings>

	<Window.TaskbarItemInfo>
		<TaskbarItemInfo />
	</Window.TaskbarItemInfo>

	<DockPanel>
		<!-- Main menu -->
		<Menu DockPanel.Dock="Top" Name="mainMenu" Height="23" KeyboardNavigation.TabNavigation="None">
			<MenuItem Header="{x:Static properties:Resources._File}" Tag="_File">
				<!-- content of file menu is added using MEF -->
			</MenuItem>
			<MenuItem Header="{x:Static properties:Resources._View}" Tag="_View">
				<MenuItem Header="{x:Static properties:Resources.Show_publiconlyTypesMembers}" IsCheckable="True"
						  IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisPublicOnly}" />
				<MenuItem Header="{x:Static properties:Resources.Show_internalTypesMembers}" IsCheckable="True"
						  IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisPublicAndInternal}" />
				<MenuItem Header="{x:Static properties:Resources.Show_allTypesAndMembers}" IsCheckable="True"
						  IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisAll}" />
				<Separator />
				<MenuItem Header="{x:Static properties:Resources.Theme}" ItemsSource="{x:Static themes:ThemeManager.AllThemes}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
							<Setter Property="Command" Value="{composition:Import commands:SetThemeCommand}" />
							<Setter Property="CommandParameter" Value="{Binding}" />
							<Setter Property="IsCheckable" Value="True" />
							<!-- Required by AvalonDock's MenuItem style to show the checkmark -->
							<Setter Property="IsChecked">
								<Setter.Value>
									<MultiBinding Converter="{x:Static toms:BinaryOperationConverter.Equality}" Mode="OneWay">
										<Binding />
										<Binding Path="DataContext.SessionSettings.Theme" RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}"/>
									</MultiBinding>
								</Setter.Value>
							</Setter>
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<MenuItem Header="{x:Static properties:Resources.UILanguage}">
					<MenuItem Header="{x:Static properties:Resources.UILanguage_System}" IsCheckable="True"
							  IsChecked="{Binding SessionSettings.CurrentCulture, Converter={controls:CultureSelectionConverter}, ConverterParameter={x:Null}}" />
					<MenuItem Header="English" IsCheckable="True"
							  IsChecked="{Binding SessionSettings.CurrentCulture, Converter={controls:CultureSelectionConverter}, ConverterParameter=en-US}" />
					<MenuItem Header="中文" IsCheckable="True"
							  IsChecked="{Binding SessionSettings.CurrentCulture, Converter={controls:CultureSelectionConverter}, ConverterParameter=zh-Hans}" />
				</MenuItem>
			</MenuItem>
			<MenuItem Header="{x:Static properties:Resources._Window}" Tag="_Window" >
				<!-- content of window menu is added using MEF -->
			</MenuItem>
		</Menu>
		<!-- ToolBar -->
		<ToolBar
			Name="toolBar"
			DockPanel.Dock="Top" ToolBarTray.IsLocked="True" KeyboardNavigation.TabNavigation="None">
			<ToolBar.Resources>
				<!-- Make images transparent if menu command is disabled -->
				<Style TargetType="{x:Type Image}">
					<Style.Triggers>
						<DataTrigger
							Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}"
							Value="False">
							<Setter Property="Opacity" Value="0.30" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
				<Style TargetType="{x:Type Image}" x:Key="DarkModeAwareImageStyle">
					<Setter Property="Effect" Value="{DynamicResource {x:Static themes:ResourceKeys.ThemeAwareButtonEffect}}" />
					<Style.Triggers>
						<DataTrigger
							Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}"
							Value="False">
							<Setter Property="Opacity" Value="0.30" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ToolBar.Resources>
			<!-- 'Navigation' toolbar category is inserted here -->
			<Separator />
			<!-- 'Open' toolbar category is inserted here -->
			<Separator />
			<Grid Margin="2,0">
				<ItemsControl ItemsSource="{Binding AssemblyListManager.AssemblyLists}" Height="0" Margin="15,0" />
				<ComboBox Name="assemblyListComboBox" MaxDropDownHeight="Auto"
						  ItemsSource="{Binding AssemblyListManager.AssemblyLists}"
						  ToolTip="{x:Static properties:Resources.SelectAssemblyListDropdownTooltip}"
						  SelectedItem="{Binding SessionSettings.ActiveAssemblyList}" />
			</Grid>
			<Button Command="{composition:Import local:ManageAssemblyListsCommand}"
					CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
					ToolTip="{x:Static properties:Resources.ManageAssemblyLists}">
				<Image Width="16" Height="16" Source="{controls:XamlResource Images/AssemblyList}"
					   Style="{StaticResource DarkModeAwareImageStyle}" />
			</Button>
			<Separator />
			<CheckBox IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisPublicOnly}"
					  ToolTip="{x:Static properties:Resources.ShowPublicOnlyTypesMembers}">
				<Image Width="16" Height="16" Source="{controls:XamlResource Images/ShowPublicOnly}"
					   Style="{StaticResource DarkModeAwareImageStyle}" />
			</CheckBox>
			<CheckBox IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisPublicAndInternal}"
					  ToolTip="{x:Static properties:Resources.ShowInternalTypesMembers}">
				<Image Width="16" Height="16" Source="{controls:XamlResource Images/ShowPrivateInternal}"
					   Style="{StaticResource DarkModeAwareImageStyle}" />
			</CheckBox>
			<CheckBox IsChecked="{Binding SessionSettings.LanguageSettings.ApiVisAll}"
					  ToolTip="{x:Static properties:Resources.ShowAllTypesAndMembers}">
				<Image Width="16" Height="16" Source="{controls:XamlResource Images/ShowAll}"
					   Style="{StaticResource DarkModeAwareImageStyle}" />
			</CheckBox>
			<Separator />
			<Grid Margin="2,0">
				<ItemsControl ItemsSource="{Binding LanguageService.AllLanguages}"  DisplayMemberPath="Name" Height="0" Margin="15,0" />
				<ComboBox Name="languageComboBox" DisplayMemberPath="Name" MaxDropDownHeight="Auto"
						  IsEnabled="{Binding Workspace.ActiveTabPage.SupportsLanguageSwitching}"
						  ItemsSource="{Binding LanguageService.AllLanguages}"
						  ToolTip="{x:Static properties:Resources.SelectLanguageDropdownTooltip}"
						  SelectedItem="{Binding LanguageService.Language}" />
			</Grid>
			<Grid Margin="2,0">
				<ItemsControl ItemsSource="{Binding SelectedItem.LanguageVersions, ElementName=languageComboBox, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName" Height="0" Margin="15,0" />
				<ComboBox Name="languageVersionComboBox" DisplayMemberPath="DisplayName" MaxDropDownHeight="Auto"
						  ToolTip="{x:Static properties:Resources.SelectVersionDropdownTooltip}"
						  Visibility="{Binding SelectedItem.HasLanguageVersions, ElementName=languageComboBox, Converter={toms:BooleanToVisibilityConverter}}"
						  IsEnabled="{Binding Workspace.ActiveTabPage.SupportsLanguageSwitching}"
						  ItemsSource="{Binding SelectedItem.LanguageVersions, ElementName=languageComboBox, UpdateSourceTrigger=PropertyChanged}"
						  SelectedItem="{Binding LanguageService.LanguageVersion, UpdateSourceTrigger=PropertyChanged}" />
			</Grid>
		</ToolBar>
		<!-- Update panel -->
		<ContentControl DockPanel.Dock="Top" Content="{composition:Import viewModels:UpdatePanelViewModel}" />
		<!-- Status bar -->
		<StatusBar x:Name="statusBar" DockPanel.Dock="Bottom" Height="26" Visibility="Collapsed">
			<StatusBarItem DockPanel.Dock="Right">
				<TextBlock VerticalAlignment="Center"
						   HorizontalAlignment="Right"
						   x:Name="statusLabel"
						   ToolTip="{x:Static properties:Resources.Status}"
						   Text="{x:Static properties:Resources.StandBy}" />
			</StatusBarItem>
		</StatusBar>

		<avalondock:DockingManager x:Name="DockManager"
								   DataContext="{Binding Workspace}"
								   AnchorablesSource="{Binding ToolPanes}"
								   DocumentsSource="{Binding TabPages}"
								   ActiveContent="{Binding ActiveTabPage, Mode=TwoWay, Converter={docking:TabPageGuardConverter}}"
								   AllowMixedOrientation="True">

			<avalondock:DockingManager.DocumentHeaderTemplate>
				<DataTemplate DataType="{x:Type viewModels:PaneModel}">
					<TextBlock x:Name="headerText" Text="{Binding Title}" />
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding IsActive}" Value="True">
							<Setter TargetName="headerText" Property="FontWeight" Value="Bold" />
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</avalondock:DockingManager.DocumentHeaderTemplate>

			<avalondock:DockingManager.LayoutItemContainerStyleSelector>
				<docking:PaneStyleSelector>
					<docking:PaneStyleSelector.ToolPaneStyle>
						<Style TargetType="{x:Type avalondock:LayoutAnchorableItem}">
							<Setter Property="Title" Value="{Binding Model.Title}" />
							<Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={toms:BooleanToVisibilityConverter VisibilityWhenBooleanIsFalse=Hidden}}" />
							<Setter Property="ContentId" Value="{Binding Model.ContentId}" />
							<Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
							<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
							<Setter Property="CanHide" Value="{Binding Model.IsCloseable}" />
							<Setter Property="HideCommand" Value="{Binding Model.CloseCommand}" />
							<Setter Property="CanClose" Value="{Binding Model.IsCloseable}" />
							<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
						</Style>
					</docking:PaneStyleSelector.ToolPaneStyle>
					<docking:PaneStyleSelector.TabPageStyle>
						<Style TargetType="{x:Type avalondock:LayoutItem}">
							<Setter Property="Title" Value="{Binding Model.Title}" />
							<Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={toms:BooleanToVisibilityConverter VisibilityWhenBooleanIsFalse=Hidden}}" />
							<Setter Property="ContentId" Value="{Binding Model.ContentId}" />
							<Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
							<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
							<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
							<Setter Property="CanClose" Value="{Binding Model.IsCloseable, Mode=TwoWay}" />
						</Style>
					</docking:PaneStyleSelector.TabPageStyle>
				</docking:PaneStyleSelector>
			</avalondock:DockingManager.LayoutItemContainerStyleSelector>
		</avalondock:DockingManager>
	</DockPanel>
</Window>